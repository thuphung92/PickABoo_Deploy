{"version":3,"sources":["components/useBreedList.js","components/useAnimalList.js","views/Pet.js","components/Results.js","views/Home.js","components/Carousel.js","ErrorBoundary.js","context/UserContext.js","views/Details.js","components/NavBar.js","helpers.js","api/apiClient.js","views/Login.js","views/Logout.js","views/Register.js","App.js","reportWebVitals.js","index.js"],"names":["client","Client","apiKey","process","secret","localCache","useAnimalList","useState","animalList","setAnimalList","status","setStatus","useEffect","a","animalData","types","resp","animals","data","map","type","name","animal","getAnimalList","Pet","breed","photos","location","id","distance","alt","style","textDecoration","to","className","Card","Img","src","width","height","objectFit","Body","variant","color","textAlign","Title","Text","Results","pets","length","Container","Row","pet","Col","md","breeds","primary","contact","address","city","state","Math","ceil","primary_photo_cropped","small","Home","setLocation","setAnimal","setBreed","setPets","breedList","setBreedList","then","getBreedList","useBreedList","errStatus","setErrStatus","getPets","search","sort","limit","console","error","styles","wrapper","marginTop","marginBottom","display","justifyContent","alignItems","box","padding","border","borderRadius","background","Alert","ImgOverlay","Form","onSubmit","e","preventDefault","Group","as","Label","htmlFor","Control","onChange","target","value","placeholder","onBlur","Button","Carousel","active","handleIndexClick","event","setState","dataset","index","this","props","media","item","medium","full","photo","onClick","Component","defaultProps","ErrorBoundary","hasError","info","Link","children","UserContext","React","createContext","Provider","Consumer","Details","loading","liked","toggle","localLike","localStorage","setItem","show","match","params","unknown","mixed","secondary","age","size","gender","description","desciption","houseTrained","attributes","house_trained","context","user","Spinner","animation","role","paddingBottom","paddingTop","Object","entries","email","phone","pathname","from","backgroundColor","float","contextType","DetailsWithRouter","withRouter","DetailsWithErrorBoundary","NavBar","str","useContext","setUser","Navbar","bg","expand","Brand","fontWeight","fontSize","Nav","toLowerCase","split","word","charAt","toUpperCase","slice","join","apiClient","password","create","baseURL","window","hostname","headers","Authorization","Base64","encode","getToken","get","response","ok","loginFormSchema","Yup","shape","required","min","loginFormInitialValues","Login","handleSubmit","res","badLogin","serverError","redirect","JSON","stringify","intended","history","push","container","initialValues","validationSchema","values","errors","touched","Logout","clear","registerFormSchema","oneOf","registerFormInitialValues","first_name","last_name","confirm_password","Register","axios","post","successRegister","catch","err","badRegister","username","getUserFromLocalStorage","parse","getItem","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5ccac79.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Client } from '@petfinder/petfinder-js';\r\n\r\nconst client = new Client({apiKey: process.env.REACT_APP_API_KEY, secret: process.env.REACT_APP_API_SECRET});\r\n\r\n// save the previous choices in the local Cache -> don't have to request api every single time\r\nconst localCache = {}; \r\n\r\nexport default function useBreedList(animal) {\r\n    const [breedList, setBreedList] = useState([]);\r\n    const [status, setStatus] = useState('unloaded');\r\n\r\n    useEffect(() =>{\r\n        if (!animal) {\r\n            setBreedList([]);\r\n        } else if (localCache[animal]) {\r\n            setBreedList(localCache[animal])\r\n        } else {\r\n            getBreedList();\r\n        }\r\n\r\n        async function getBreedList() {\r\n            //clear the list of the previous state if it exists\r\n            setBreedList([]); \r\n            setStatus ('loading');\r\n    \r\n            const resp = await client.animalData.breeds(`${ animal }`).then(resp =>{\r\n                return resp.data.breeds\r\n            })\r\n            const breeds = resp.map(breed => {return breed.name})\r\n            localCache[animal] = breeds || [];\r\n            setBreedList(localCache[animal])\r\n            setStatus('loaded');\r\n        }\r\n    }, [animal])\r\n\r\n    return [breedList, status];\r\n}","import { useState, useEffect } from 'react';\r\nimport { Client } from '@petfinder/petfinder-js';\r\n\r\nconst client = new Client({apiKey: process.env.REACT_APP_API_KEY, secret: process.env.REACT_APP_API_SECRET});\r\n\r\nconst localCache = {}; \r\nexport default function useAnimalList() {\r\n    const [animalList, setAnimalList] = useState([]);\r\n    const [status, setStatus] = useState('unloaded');\r\n\r\n    useEffect(() =>{\r\n        if (!animal) {\r\n            setAnimalList([]);\r\n        } else {\r\n            getAnimalList();\r\n        }\r\n\r\n        async function getAnimalList() {\r\n            setAnimalList([]); //to clear the list of the previous state if it exists\r\n            setStatus ('loading');\r\n    \r\n            const resp = await client.animalData.types()\r\n            const animals = resp.data.types.map(type => {return type.name})\r\n            localCache[animals] = animals || [];\r\n            setAnimalList(localCache[animals])\r\n            setStatus('loaded');\r\n        }\r\n    }, [])\r\n\r\n    return [animalList, status];\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst Pet = ({name, animal, breed, photos, location,id, distance}) => {   \r\n    let alt = 'https://res.cloudinary.com/dci7rk8xe/image/upload/v1631432062/react_myboo/no-image-300X300_fu0uq0.png'\r\n\r\n    if (photos !== null) {\r\n        alt = photos\r\n    }\r\n\r\n    return (\r\n        <Link style={{ textDecoration: 'none' }} to={`/details/${id}`} className=\"pet\" >\r\n            <Card className='mb-5'>\r\n                <Card.Img  src={alt} alt={name} style={{width: '100%', height:'300px', objectFit: 'cover'}} />\r\n                <Card.Body variant='warning' style={{color: 'black', textAlign: 'center', textDecoration: 'none'}}>\r\n                    <Card.Title className='fw-bold'>{name}</Card.Title>\r\n                    <Card.Text><small>{animal} - {breed} - {location}</small></Card.Text>\r\n                    {distance !== null && <Card.Text className='fw-bold'>{distance} miles</Card.Text>}\r\n                </Card.Body>\r\n            </Card>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Pet\r\n","import React from 'react'\r\nimport Pet from '../views/Pet'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Results = ({ pets }) => {\r\n    return (\r\n        \r\n        <div className=\"search\">\r\n            \r\n            {!pets.length ? (\r\n                <Container className='text-center'>\r\n                    <span><h2>No Pet Found</h2></span>\r\n                </Container>\r\n            ) : (\r\n                <Container>\r\n                    <Row className='show-grid'>\r\n                        {pets.map((pet) => (\r\n                            <Col md={3} key={pet.id}>\r\n                            <Pet\r\n                                key = {pet.id} \r\n                                animal = {pet.type}\r\n                                name = {pet.name}\r\n                                breed = {pet.breeds.primary}\r\n                                location = {`${pet.contact.address.city}, ${pet.contact.address.state}`}\r\n                                id = {pet.id}\r\n                                distance = {Math.ceil(pet.distance * 10)/10}\r\n                                photos = {pet.primary_photo_cropped !== null? pet.primary_photo_cropped.small : null}\r\n                            />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </Container>\r\n            )}  \r\n                 \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react';\r\nimport useBreedList from '../components/useBreedList';\r\nimport useAnimalList from '../components/useAnimalList';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { Client } from '@petfinder/petfinder-js';\r\nimport Results from '../components/Results';\r\nimport { Form, Row, Container, Col, Button, Card } from 'react-bootstrap';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nconst client = new Client({apiKey: process.env.REACT_APP_API_KEY, secret: process.env.REACT_APP_API_SECRET});\r\n\r\nconst Home = () => {\r\n    const [location, setLocation] = useState('Orange, CA');\r\n    const [animal, setAnimal] = useState('');\r\n    const [breed, setBreed] = useState('');\r\n    const [pets, setPets] = useState([]);\r\n    const [animals] = useAnimalList();\r\n    const [breeds] = useBreedList(animal);\r\n    const [errStatus, setErrStatus] = useState(null);\r\n\r\n  \r\n    useEffect(() => {\r\n        getPets();\r\n    },[])\r\n    \r\n    async function getPets() {\r\n        \r\n        try {\r\n            const resp = await client.animal.search({\r\n                type: `${animal}`,\r\n                location: `${location}`,\r\n                breed: `${breed}`,\r\n                status: 'adoptable',\r\n                sort: 'distance',\r\n                limit: 100           \r\n            });\r\n            setPets(resp.data.animals);\r\n        }\r\n        catch (err) {\r\n            if(400 <= err.status < 500) {setErrStatus(400)}\r\n            else if(500 <= err.status < 600 ) {setErrStatus(500)}\r\n            else {console.error(err.status)}\r\n            return\r\n        }\r\n        \r\n    }\r\n\r\nconst styles={\r\n            error:{color:'red'},\r\n            wrapper:{\r\n                marginTop: '120px',\r\n                marginBottom: '50px',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            },\r\n            box:{\r\n                width: '700px',\r\n                height: '90px',\r\n                padding: '10px 10px 10px 20px',\r\n                border: '0px solid #fff',\r\n                borderRadius: '1rem',\r\n                background: 'rgba(255,255,255,.7)'\r\n            }\r\n        }\r\n\r\n    return (\r\n        <div className=\"search-params\">         \r\n            {errStatus === 400 && <Alert variant = 'danger'>Please Enter A Valid Location!<br/> Tips: A valid Zip Code is also acceptable!</Alert>}\r\n            {errStatus === 500 && <Alert variant = 'info'>There was an error happen while trying to connect to the server. Please try again.</Alert>}\r\n\r\n            <Card className=\"bg-dark text-black \">\r\n                <Card.Img src=\"https://res.cloudinary.com/dci7rk8xe/image/upload/c_crop,h_250,w_1100/v1631606822/react_myboo/6_nar5sx.jpg\" alt=\"Card image\" />\r\n                \r\n                <Card.ImgOverlay>                   \r\n                <div className=\"wrapper\" style={styles.wrapper}>\r\n                    <div className=\"box\" style={styles.box}> \r\n                <Form\r\n                    onSubmit = {e => {\r\n                        e.preventDefault();\r\n                        getPets();\r\n                    }}\r\n                >\r\n                    <Row>\r\n                        <Form.Group as={Col} className=\"mb-3\">\r\n                            <Form.Label htmlFor=\"location\" className='fw-bold'>\r\n                                Location\r\n                                <Form.Control\r\n                                    id='location'\r\n                                    onChange={e => setLocation(e.target.value)} \r\n                                    value={location} \r\n                                    placeholder=\"Location\">\r\n                                </Form.Control>\r\n                            </Form.Label>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"mb-3\">\r\n                            <Form.Label htmlFor=\"animal\" className='fw-bold'>\r\n                                Animal\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    id=\"animal\"\r\n                                    value={animal}\r\n                                    onChange={e => setAnimal(e.target.value)}\r\n                                    onBlur={e => setAnimal(e.target.value)}\r\n                                >\r\n                                    <option/>\r\n                                    {\r\n                                        animals.map(animal => (\r\n                                            <option value={animal} key={animal}>\r\n                                                {animal}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Label>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"breed\" className='fw-bold'>\r\n                            Breed\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                id=\"breed\"\r\n                                value={breed}\r\n                                onChange={e => setBreed(e.target.value)}\r\n                                onBlur={e => setBreed(e.target.value)}\r\n                            >\r\n                                <option/>\r\n                                {breeds.map(breed => (\r\n                                        <option value={breed} key={breed}>\r\n                                            {breed}\r\n                                        </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Label>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Button variant=\"warning\" type=\"submit\">Submit</Button >\r\n                </Form>\r\n                </div>\r\n                </div>\r\n                </Card.ImgOverlay>\r\n            </Card>\r\n\r\n            <div style={{marginTop: '50px'}}>                        \r\n                <Container className='text-center' style={{ marginTop:'50px'}}>\r\n                    <h1>Who's Gonna Be Your New Boo?</h1>                   \r\n                </Container>\r\n            </div>\r\n\r\n            <div style={{marginTop: '50px'}}>\r\n                <Results pets={pets} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nexport default class Carousel extends Component {\r\n\r\n    state= { \r\n        active: 0\r\n    }\r\n\r\n    static defaultProps={\r\n        media: ['https://res.cloudinary.com/dci7rk8xe/image/upload/v1631432062/react_myboo/no-image-300X300_fu0uq0.png']\r\n    }\r\n\r\n    handleIndexClick = event => {\r\n        this.setState({\r\n            active: +event.target.dataset.index //turns a string into a number\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const { active } = this.state;\r\n        const photos = this.props.media.length?\r\n            this.props.media.map((item) => { return item.medium? item.medium: item.full })\r\n            : [];\r\n        return (\r\n            <div className=\"carousel\">\r\n                <div className='text-center mb-4'>\r\n                    <img src={photos[active]} alt=\"primary animal\" />\r\n                </div>\r\n                <div className=\"carousel-smaller text-center\">\r\n                    <Container className='mt-5 mb-3'>\r\n                        <Row>\r\n                            {photos.map((photo, index) => (\r\n                                <Col md={2} key={photo}>\r\n                                <img\r\n                                    onClick={this.handleIndexClick}\r\n                                    key={photo} src={photo}\r\n                                    className = { index === active ? 'active' : '' }\r\n                                    alt='animal thumbnail'\r\n                                    data-index = {index}\r\n                                    style={{height: '100px', width:'100%', objectFit:'contain'}}\r\n                                />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = { hasError: false };\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    console.error(\"ErrorBoundary caught an error\", error, info);\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Alert>\r\n          There was an error with this listing. <Alert.Link as={Link} to=\"/\">Click here</Alert.Link> to go back to the home page.\r\n        </Alert>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react'\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport const UserProvider = UserContext.Provider\r\nexport const UserConsumer = UserContext.Consumer\r\n\r\nexport default UserContext","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Client } from '@petfinder/petfinder-js';\r\nimport Carousel from '../components/Carousel';\r\nimport ErrorBoundary from '../ErrorBoundary';\r\nimport { Spinner, Card, Row, Col, Container, } from 'react-bootstrap'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport UserContext from '../context/UserContext';\r\n\r\nconst client = new Client({apiKey: process.env.REACT_APP_API_KEY, secret: process.env.REACT_APP_API_SECRET});\r\n\r\nclass Details extends Component {\r\n    state = {\r\n        loading: true,\r\n        liked: false\r\n    };\r\n\r\n    static contextType = UserContext\r\n \r\n    async componentDidMount() {\r\n        \r\n        const resp = await client.animal.show(this.props.match.params.id)\r\n        const pet = resp.data.animal\r\n        \r\n        let breed;\r\n        if (pet.breeds.unknown) {\r\n            breed = 'unknown'\r\n        } else if (pet.breeds.mixed === true) {\r\n            breed = `${pet.breeds.primary}, ${pet.breeds.secondary}`\r\n        } else {\r\n            breed = pet.breeds.primary\r\n        }\r\n        \r\n        this.setState({\r\n            name : pet.name,\r\n            animal: pet.type,\r\n            location: `${pet.contact.address.city}, ${pet.contact.address.state}`,\r\n            age: pet.age,\r\n            size: pet.size,\r\n            gender: pet.gender,\r\n            description: pet.desciption? pet.description: \"This information hasn't been updated yet.\",\r\n            houseTrained: pet.attributes.house_trained === true ? \"Yes\" : \"No\",\r\n            breed,\r\n            media: pet.photos,\r\n            contact: pet.contact,\r\n            id : pet.id,\r\n            loading: false\r\n        });\r\n        const {user} = this.context\r\n\r\n        //const currentLocation ={\r\n            //pathname:'/login',\r\n            //state: {from: this.props.location.pathname}\r\n        //}\r\n    }\r\n\r\n    toggle = () => {\r\n        //display heart color\r\n        let localLike = this.state.liked;\r\n        localLike = !localLike;\r\n        this.setState({liked: localLike});\r\n        localStorage.setItem('liked',this.state.liked);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (\r\n                <div>\r\n                    <Container className='text-center'>\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                    </Container>\r\n                </div>\r\n            ) \r\n        }\r\n\r\n        const { name, animal, breed, age, size, gender, description, location, houseTrained, media, contact } = this.state;\r\n\r\n        const styles={\r\n            btn:{\r\n                height: 'auto',\r\n                width: 'auto',\r\n                border: 'none',\r\n                backgroundColor:'white',\r\n                float: 'right'\r\n            }\r\n        }\r\n       \r\n        return (\r\n            <div className='details mt-5'>\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <div className='mt-5'>\r\n                        <Carousel media={media}/>\r\n                        </div>\r\n                    </Col>\r\n                    \r\n                    <Col md={6}>\r\n                        <div className='detail-box mb-5'>    \r\n                            <Card style={{padding: '50px'}}>\r\n                                <div style={{paddingBottom: '20px'}}>\r\n                                    <h1 className='mb-3'>{name}</h1>\r\n                                    <h3>{animal} - {breed} - {location} </h3>  \r\n                                </div>\r\n                                <hr/>\r\n                                <div>\r\n                                    <h4>{age} - {gender} - {size}</h4>\r\n                                </div>\r\n                                <hr/>\r\n                                <div style={{paddingBottom: '30px', paddingTop: '30px'}}>\r\n                                    <h2 className='mb-5'>About</h2>\r\n                                    <div className='mb-5'>\r\n                                        <h4>CHARACTERISTICS</h4>\r\n                                        {description}\r\n                                    </div>\r\n                                    <div className='mb-5'>\r\n                                        <h4>HOUSE-TRAINED</h4>\r\n                                        { houseTrained }\r\n                                    </div>\r\n                                    <div>\r\n                                        <h4>CONTACT</h4>\r\n                                            {Object.entries(this.context.user).length?\r\n                                                <>\r\n                                                    <div>\r\n                                                        <MailOutlineIcon/> {contact.email}\r\n                                                    </div>\r\n                                                        <CallIcon/> {contact.phone}\r\n                                                </>\r\n                                            :\r\n                                            <p>\r\n                                                Please <Link to={{pathname:\"/login\", state: {from: this.props.location.pathname}}}>Login</Link> to View This Information!\r\n                                            </p>}\r\n                                    </div>\r\n                                </div>\r\n                                    <span >\r\n                                        <button\r\n                                            style={styles.btn}\r\n                                            onClick={()=>this.toggle()}\r\n                                        >\r\n                                            <FavoriteIcon\r\n                                                color={this.state.liked? \"secondary\" : \"disabled\"}\r\n                                                \r\n                                            />\r\n                                        </button>\r\n                                    </span>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                   \r\n                </Row>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst DetailsWithRouter = withRouter(Details)\r\n\r\nexport default function DetailsWithErrorBoundary() {\r\n    return (\r\n        <ErrorBoundary>\r\n            <DetailsWithRouter />\r\n        </ErrorBoundary>\r\n    )\r\n};\r\n\r\n","import React, { useContext } from 'react'\r\nimport { Navbar, Container, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport PetsIcon from '@material-ui/icons/Pets';\r\nimport UserContext from '../context/UserContext';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { titleCase } from '../helpers';\r\n\r\nfunction NavBar() {\r\n    const {user, setUser} = useContext(UserContext);\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Container>\r\n            <Navbar.Brand>\r\n                <Link to='/' style={{ textDecoration: 'none', fontWeight: 'bold', color: 'white' }}>\r\n                    <PetsIcon style={{ fontSize: 40 }}/> Pick-A-Boo\r\n                </Link>\r\n            </Navbar.Brand>\r\n            <Nav className=\"me-auto\">\r\n                <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n            </Nav>\r\n            \r\n            \r\n            <Nav >               \r\n                {Object.entries(user).length  ?\r\n                    <>\r\n                        <Nav.Link><PersonIcon /> {titleCase(user.user)}</Nav.Link>   \r\n                                     \r\n                        <Nav.Link as={Link} to=\"/logout\">Logout</Nav.Link>\r\n                    \r\n                    </>\r\n                :\r\n                <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>}\r\n            </Nav>\r\n\r\n        </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export function titleCase(str){\r\n    return str.toLowerCase().split(' ').map(\r\n        function(word){\r\n            return (word.charAt(0).toUpperCase()+word.slice(1));\r\n        }\r\n    ).join(' ');\r\n}","import {create} from 'apisauce'\r\nimport { Base64 } from 'js-base64'\r\n\r\nconst apiClient = (email, password) => create(\r\n    {\r\n        baseURL: window.location.hostname === \"localhost\" || window.location.hostname === '127.0.0.1'? 'http://127.0.0.1:5000' : '',\r\n        headers:{ Authorization: \"Basic \" + Base64.encode(email+':'+password)}\r\n    }\r\n);\r\n\r\n//for login\r\nconst endpoint = \"/api/token\";\r\nexport const getToken = async(email, password) => {\r\n    let response = await apiClient(email, password).get(endpoint);\r\n    if (response.status === 401){return 401}\r\n    if (!response.ok){return 500}\r\n    if (response.ok){return response.data}\r\n    return\r\n}","import React, { Component } from 'react';\r\nimport * as Yup from 'yup';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport { Col, Button, Alert} from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getToken } from '../api/apiClient';\r\nimport UserContext from '../context/UserContext';\r\n\r\n\r\nconst loginFormSchema = Yup.object().shape({\r\n    \"email\": Yup.string().email(\"Must be a valid e-mail format\").required('Required'),\r\n    \"password\": Yup.string().min(6).required('')\r\n})\r\n\r\nconst loginFormInitialValues={\r\n    email:'',\r\n    password:''\r\n}\r\n\r\nclass Login extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            badLogin:false,\r\n            serverError:false,\r\n            redirect:false,\r\n            user: {}\r\n        }\r\n    }\r\n    \r\n    static contextType = UserContext\r\n    componentDidMount(){\r\n        const {user, setUser} = this.context\r\n    }\r\n    \r\n    handleSubmit=async ({email, password})=>{     \r\n        const res = await getToken(email, password);\r\n\r\n        if (res === 401){return this.setState({badLogin:true, serverError:false})};\r\n        if (res === 500){return this.setState({badLogin:false, serverError:true})};\r\n\r\n        this.context.setUser(res)\r\n        //console.log(this.context.user)\r\n        this.setState({redirect:true})\r\n        localStorage.setItem('user', JSON.stringify(res))\r\n        \r\n        // redirect after login\r\n        let intended = this.props.history.location.state;\r\n        if (intended) {this.props.history.push(intended.from)\r\n        } else {this.props.history.push('/')}\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const styles={\r\n            error:{color:'red'},\r\n            wrapper:{\r\n                height: '100vh',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            },\r\n            container:{\r\n                width: '400px',\r\n                height: '450px',\r\n                padding: '20px 20px 20px 20px',\r\n                border: '0px solid #fff',\r\n                borderRadius: '1rem',\r\n            }\r\n        }\r\n        const desiredLocation = this.props.history.location.state;\r\n        return (\r\n            <div>                \r\n                {this.state.badLogin?<Alert variant=\"danger\">Invalid Email or Password</Alert>:''}\r\n                {this.state.serverError?<Alert variant=\"danger\">Unexpected error. Please try again!</Alert>:''}\r\n                \r\n                <div className=\"wrapper\" style={styles.wrapper}>\r\n                    <div className=\"container\" style={styles.container}> \r\n                                                                  \r\n                        \r\n\r\n                            <Formik \r\n                                initialValues={loginFormInitialValues}\r\n                                validationSchema={loginFormSchema}\r\n                                onSubmit={(values)=>{this.handleSubmit(values)}}\r\n                                >\r\n\r\n                                {({errors, touched})=>(\r\n                                    <Form>\r\n                                        <h2 className=\"fw-700 display1-size display2-md-size mb-3\">Login into <br/> your account</h2>\r\n\r\n                                        <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                        <Field name=\"email\" className=\"form-control\"/>\r\n\r\n                                        {errors.email && touched.email ? (<div style={styles.error}>{errors.email}</div>):null}\r\n\r\n                                        <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                        <Field name=\"password\" className=\"form-control\" type=\"password\"/>\r\n                                                    \r\n                                        {errors.password && touched.password ? (<div style={styles.error}>{errors.password}</div>):null}\r\n                                                    \r\n                                        <Button className=\"btn text-center style2-input text-white fw-600 bg-dark border-0 p-1 mt-2 w-100\" type=\"submit\">Login</Button>  \r\n                                    </Form>\r\n                                )}\r\n                            </Formik>\r\n                        <Col className=\"col-sm-12 p-0 text-left\">\r\n                            <h6 className=\"text-grey-500 font-xsss fw-500 mt-0 mb-0 lh-32\">Don't have an account? <Link to={{pathname:\"/register\"}} className=\"fw-700 ms-1\">Register</Link>\r\n                            </h6>\r\n                                    \r\n                        </Col>\r\n                              \r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Login)","import React, { Component } from 'react'\r\nimport UserContext from '../context/UserContext';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default class Logout extends Component {\r\n    static contextType = UserContext\r\n\r\n    componentDidMount() {\r\n        const { setUser } = this.context\r\n        setUser({})\r\n        localStorage.clear()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Redirect to={{pathname: '/'}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as Yup from 'yup';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport { Col, Button, Alert } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst registerFormSchema = Yup.object().shape({\r\n    \"first_name\": Yup.string().required('Required'),\r\n    \"last_name\": Yup.string().required('Required'),\r\n    \"email\": Yup.string().email(\"Must be a valid e-mail format\").required('Required'),\r\n    \"password\": Yup.string().min(6).required('Required'),\r\n    \"confirm_password\": Yup.string().oneOf([Yup.ref('password','')],'Passwords must match').required('Required')\r\n})\r\n\r\nconst registerFormInitialValues={\r\n    first_name:'',\r\n    last_name:'',\r\n    email:'',\r\n    password:'',\r\n    confirm_password:''\r\n}\r\n\r\nexport default class Register extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            badRegister: false,\r\n            serverError:false,\r\n            successRegister:false,\r\n            redirect:false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        axios.post(window.location.hostname === \"localhost\" || window.location.hostname === '127.0.0.1'? 'http://127.0.0.1:5000' : '',values).then(\r\n            res => {this.setState({\r\n                successRegister:true,\r\n                redirect: true})}\r\n\r\n        ).catch(err => {\r\n            if (err.response){\r\n                if(err.response.status === 400){return this.setState({badRegister:true,serverError:false})}\r\n                if(err.response.status === 500){return this.setState({badRegister:false,serverError:true})}\r\n                return   \r\n            }   \r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const styles={\r\n            error:{color:'red'},\r\n            wrapper:{\r\n                height: '100vh',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            },\r\n            container:{\r\n                width: '400px',\r\n                height: '550px',\r\n                padding: '20px 20px 20px 20px',\r\n                border: '0px solid #fff',\r\n                borderRadius: '1rem',\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>                \r\n                {this.state.successRegister ? <Redirect to={{pathname:\"/login\"}}/>:''}\r\n                {this.state.badRegister?<Alert variant=\"danger\">Email has been registered before</Alert>:''}\r\n                {this.state.serverError?<Alert variant=\"danger\">Unexpected error. Please try again!</Alert>:''}\r\n\r\n                <div className=\"wrapper\" style={styles.wrapper}>\r\n                    <div className=\"container\" style={styles.container}> \r\n                    \r\n                        <Formik \r\n                            initialValues={registerFormInitialValues}\r\n                            validationSchema={registerFormSchema}\r\n                            onSubmit={(values)=>{this.handleSubmit(values)}}>\r\n\r\n                            {({errors, touched})=>(\r\n                                <Form>\r\n                                    <h2 className=\"fw-700 display1-size display2-md-size mb-3\">Create <br/> your account</h2>\r\n\r\n                                    <label htmlFor=\"first_name\" className=\"form-label\">First Name</label>\r\n                                    <Field name=\"first_name\" className=\"form-control\"/>\r\n\r\n                                    {errors.first_name && touched.first_name ? (<div style={styles.error}>{errors.first_name}</div>):null}\r\n\r\n                                    <label htmlFor=\"last_name\" className=\"form-label\">Last Name</label>\r\n                                    <Field name=\"last_name\" className=\"form-control\"/>\r\n                                                \r\n                                    {errors.last_name && touched.last_name ? (<div style={styles.error}>{errors.last_name}</div>):null}\r\n\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <Field name=\"email\" className=\"form-control\"/>\r\n\r\n                                    {errors.email && touched.email ? (<div style={styles.error}>{errors.username}</div>):null}\r\n\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <Field name=\"password\" className=\"form-control\" type=\"password\"/>\r\n                                                \r\n                                    {errors.password && touched.password ? (<div style={styles.error}>{errors.password}</div>):null}\r\n\r\n                                    <label htmlFor=\"confirm_password\" className=\"form-label\">Password</label>\r\n                                    <Field name=\"confirm_password\" className=\"form-control\" type=\"password\"/>\r\n                                                \r\n                                    {errors.confirm_password && touched.password ? (<div style={styles.error}>{errors.confirm_password}</div>):null}\r\n\r\n                                    <Button className=\"btn text-center style2-input text-white fw-600 bg-dark border-0 p-1 mt-2 w-100\" type=\"submit\">Register</Button>  \r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                        <Col className=\"col-sm-12 p-0 text-left\">\r\n                            <h6 className=\"text-grey-500 font-xsss fw-500 mt-0 mb-0 lh-32\">Don't have an account? <Link to={{pathname:\"/login\"}} className=\"fw-700 ms-1\">Login</Link>\r\n                            </h6>\r\n                        </Col>\r\n                              \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './App.css';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch,} from 'react-router-dom';\nimport Home from './views/Home';\nimport Details from './views/Details';\nimport UserContext from './context/UserContext';\nimport NavBar from './components/NavBar';\nimport Login from './views/Login';\nimport Logout from './views/Logout'\nimport Register from './views/Register';\n\n\nconst getUserFromLocalStorage = JSON.parse(localStorage.getItem('user') || {})\n\nconst App = () => {\n  const [user, setUser] = useState(getUserFromLocalStorage);\n  \n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(user));\n  },[user])\n\n  return (\n    <div>      \n      <Router>\n      <UserContext.Provider value={{user, setUser}}>\n        <NavBar />\n      </UserContext.Provider>\n        <Switch>\n          <Route exact path='/register'><Register /></Route>\n          <Route exact path=\"/\"><Home /></Route>\n\n        <UserContext.Provider value={{user, setUser}}>\n          <Route exact path='/login'><Login /></Route>\n          <Route exact path=\"/details/:id\"><Details /></Route>\n          <Route exact path='/logout'><Logout/></Route>\n        </UserContext.Provider>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n     <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}